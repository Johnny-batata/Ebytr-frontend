{"version":3,"sources":["pages/imgs/iconedoApp3.jpg","pages/login/index.styles.js","helpers/errorMsgs.js","helpers/functions/invokeAlert.js","helpers/verifyFunctions/login_validate.js","services/api.js","pages/login/index.jsx","helpers/verifyFunctions/signUp_validateEmail.js","pages/signup/index.styles.js","pages/signup/index.jsx","pages/home/components/header.styles.js","pages/home/components/header.jsx","pages/home/index.styles.js","pages/home/components/insertTask.styles.js","provider/Provider.js","helpers/verifyFunctions/insertTask_validateForm.js","pages/home/components/insertTask.jsx","pages/home/index.jsx","App.js","index.js"],"names":["module","exports","MainDiv","styled","div","Section","section","LogoImg","img","INVALID_EMAIL_PASSWORD","EMPTY_FIELD","invokeAlert","msg","alert","validateIfFieldsAreCorrect","data","email","password","validateIfFieldsAreFilled","match","length","tasksRoute","contentJson","registerNewUser","newUSer","a","responses","fetch","method","headers","body","JSON","stringify","then","response","json","catch","err","message","loginUser","user","getAllTasks","token","localStorage","getItem","authorization","createTask","newTask","updateTask","task","console","log","removeTask","id","endpoint","getAllUser","userDefault","Login","useState","setUser","redirect","setRedirect","handleChange","target","value","name","handleclick","login","setItem","src","Logo","alt","htmlFor","type","onChange","onClick","to","birthdate","ButtonLogin","button","SignUp","userInfo","setUserInfo","register","placeholder","required","data-date","data-date-format","SectionDefault","Header","header","handleClick","clear","class","FormDiv","Context","createContext","defaultCurrentTask","employee","date","status","Provider","children","allTasks","setAllTasks","allUsers","setAllUsers","currentTask","setCurrentTask","changeTask","context","fetchTasks","fetchUser","renderEmployeesSelect","defaultValue","selected","disabled","hidden","map","key","validateInsertForm","taskDefault","RenderInsertTaskForm","useContext","setNewTask","handleNewTask","sendTask","defaultSort","asc","Home","visibleInsert","setVisibleInsert","visibleUpdate","setVisibleUpdate","sortType","setSortType","currentStatus","setCurrentStatus","currentId","setId","useEffect","handleTasksStatus","buttons","document","querySelectorAll","forEach","classList","remove","add","handleInsertTask","handleSort","checkId","sendUpdateTask","removeOneTask","className","sort","b","sortAll","filter","el","renderStatusSelect","App","exact","path","component","ReactDOM","render","StrictMode","basename","process","getElementById"],"mappings":"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","file":"static/js/main.57c959d4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/iconedoApp3.7562d48c.jpg\";","import styled from 'styled-components';\n\nexport const MainDiv = styled.div`\nh2 {\n  color: #000000;\n  font-size: 27px;\n  font-weight: bold; \n  margin-bottom: 0;\n  margin-top: 20px;\n}\np {\n  color: #2E3E5C;\n  font-family: Inter;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 15px;\n  line-height: 25px;\n  text-align: center;\n  letter-spacing: 0.5px;\n}\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  height: 100%;\n  width: 100%;\n  justify-content: center;\n  \n`;\n\nexport const Section = styled.section`\n  display: flex;\n  flex-direction: column;\n  width: 350px;\n  height: 50%;\n  align-items: center;\n  justify-content: center;\n\n  input {\n    background: #FFFFFF;\n    border: 1px solid #D0DBEA;\n    box-sizing: border-box;\n    border-radius: 32px;\n    Width: 327px;\n    Height: 56px;\n    margin-bottom: 15px ;\n    outline: none;\n    padding: .5rem 3.5rem .5rem 3.5rem ;\n    font-size: 20px;\n  }\n\n  button {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 19px 32px;\n    Width: 327px;\n    Height: 56px;\n    background: #C90000;\n    border-radius: 32px;\n    color: white;\n    font-size: 18px;\n  }\n`;\n\nexport const LogoImg = styled.img`\n    width: 327px;\n    height: 140px;\n`;\n","export const INVALID_EMAIL_PASSWORD = 'email ou senha inválidos, por gentileza, verifique e tente novamente. (a senha deve possuir no mínimo 6 caracteres)';\nexport const EMPTY_FIELD = 'alguns dados não foram preenchidos, por gentileza, verifique e tente novamente';\nexport const INVALID_NICKNAME_NAME = 'nickname ou nome inválidos, por gentileza, verifique e tente novamente. (nome deve possuir no mínimo 5 caracteres e nickname 6 caracteres)';\n","const invokeAlert = (msg) => alert(msg);\nexport default invokeAlert;\n","import { INVALID_EMAIL_PASSWORD, EMPTY_FIELD } from '../errorMsgs';\nimport invokeAlert from '../functions/invokeAlert';\n\nexport const validateIfFieldsAreFilled = (data) => {\n  const { email, password } = data;\n  if (!email || !password) {\n    return invokeAlert(EMPTY_FIELD);\n  }\n\n  return true;\n};\n\nexport const validateIfFieldsAreCorrect = (data) => {\n  const { email, password } = data;\n\n  const mailFormat = /[a-z]+@[a-z]+.com/g;\n  const less = 6;\n  if (!validateIfFieldsAreFilled(data)) return;\n\n  if (!email.match(mailFormat)\n  && password.length < less) return invokeAlert(INVALID_EMAIL_PASSWORD);\n\n  return true;\n};\n","import invokeAlert from '../helpers/functions/invokeAlert';\n\nconst tasksRoute = 'http://localhost:3003/tasks';\nconst contentJson = 'application/json';\n\nconst registerNewUser = async (newUSer) => {\n  const endpoint = 'http://localhost:3003/signup';\n  const responses = fetch(endpoint, {\n    method: 'POST',\n    headers: {\n      'Content-Type': contentJson,\n    },\n    body: JSON.stringify({ ...newUSer }),\n  })\n    .then((response) => response.json())\n    .then((data) => data)\n    .catch((err) => err);\n\n  const data = await responses;\n  if (data.err) { return invokeAlert(data.err.message); }\n\n  return data;\n};\n\nconst loginUser = async (user) => {\n  const endpoint = 'http://localhost:3003/login';\n  const responses = fetch(endpoint, {\n    method: 'POST',\n    headers: {\n      'Content-Type': contentJson,\n    },\n    body: JSON.stringify({ ...user }),\n  })\n    .then((response) => response.json())\n    .then((data) => data)\n    .catch((err) => err);\n\n  const data = await responses;\n  if (data.err) { return invokeAlert(data.err.message); }\n\n  return data;\n};\n\nconst getAllTasks = async () => {\n  const endpoint = tasksRoute;\n  const token = localStorage.getItem('token');\n  const responses = await fetch(endpoint, {\n    method: 'GET',\n    headers: {\n      'Content-Type': contentJson,\n      authorization: token,\n    },\n  })\n    .then((response) => response.json())\n    .catch((err) => err);\n\n  const data = await responses;\n\n  return data;\n};\n\nconst createTask = async (newTask) => {\n  const endpoint = tasksRoute;\n  const token = localStorage.getItem('token');\n  const responses = await fetch(endpoint, {\n    method: 'POST',\n    headers: {\n      'Content-Type': contentJson,\n      authorization: token,\n    },\n    body: JSON.stringify({ ...newTask }),\n\n  })\n    .then((response) => response.json())\n    .catch((err) => err);\n\n  const data = await responses;\n\n  return data;\n};\n\nconst updateTask = async (task) => {\n  const endpoint = tasksRoute;\n  const token = localStorage.getItem('token');\n  console.log(task, 'task');\n  const responses = await fetch(endpoint, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': contentJson,\n      authorization: token,\n    },\n    body: JSON.stringify({ ...task }),\n\n  })\n    .then((response) => response.json())\n    .catch((err) => err);\n\n  const data = await responses;\n\n  return data;\n};\n\nconst removeTask = async (id) => {\n  const endpoint = `http://localhost:3003/tasks/${id}`;\n  const token = localStorage.getItem('token');\n  console.log(id, 'task');\n  const responses = await fetch(endpoint, {\n    method: 'DELETE',\n    headers: {\n      'Content-Type': contentJson,\n      authorization: token,\n    },\n  })\n    .then((response) => response.json())\n    .catch((err) => err);\n\n  const data = await responses;\n\n  return data;\n};\n\nconst getAllUser = async () => {\n  const endpoint = 'http://localhost:3003/user';\n  const token = localStorage.getItem('token');\n\n  const responses = fetch(endpoint, {\n    method: 'GET',\n    headers: {\n      'Content-Type': contentJson,\n      authorization: token,\n    },\n  })\n    .then((response) => response.json())\n    .then((data) => data)\n    .catch((err) => err);\n\n  const data = await responses;\n  if (data.err) { return invokeAlert(data.err.message); }\n\n  return data;\n};\n\nexport {\n  loginUser,\n  registerNewUser, getAllTasks, createTask, updateTask, removeTask, getAllUser };\n","import React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport * as S from './index.styles';\nimport { validateIfFieldsAreCorrect } from '../../helpers/verifyFunctions/login_validate';\nimport { loginUser } from '../../services/api';\nimport Logo from '../imgs/iconedoApp3.jpg';\n\nconst userDefault = {\n  email: '',\n  password: '',\n};\n\nconst Login = () => {\n  const [user, setUser] = useState(userDefault);\n  const [redirect, setRedirect] = useState(false);\n\n  const handleChange = ({ target: { value, name } }) => {\n    setUser({\n      ...user,\n      [name]: value,\n    });\n  };\n\n  const handleclick = async () => {\n    if (!validateIfFieldsAreCorrect(user)) {\n      return;\n    }\n    const login = await loginUser(user);\n    if (login) {\n      localStorage.setItem('token', login.token);\n      localStorage.setItem('usermail', user.email);\n      return setRedirect(true);\n    }\n  };\n\n  const renderInputs = () => (\n    <S.Section>\n      <div>\n        <label htmlFor=\"e-mail\">\n          E-mail:\n          <br />\n          <input type=\"text\" name=\"email\" onChange={ handleChange } id=\"e-mail\" />\n        </label>\n      </div>\n      <div>\n        <label htmlFor=\"password\">\n          Senha:\n          <br />\n          <input type=\"password\" name=\"password\" onChange={ handleChange } />\n        </label>\n      </div>\n      <div>\n        <button type=\"button\" onClick={ handleclick }>Entrar </button>\n      </div>\n      <div>\n        <Link to=\"/signup\">Cadastre-se</Link>\n      </div>\n    </S.Section>\n  );\n\n  return (\n    <S.MainDiv>\n      <S.LogoImg src={ Logo } alt=\"Logo\" />\n      <h2>Bem Vindo!</h2>\n      <p>Acesse sua conta aqui!</p>\n      {renderInputs()}\n      {redirect && <Redirect to=\"/home\" />}\n    </S.MainDiv>\n  );\n};\n\nexport default Login;\n","import invokeAlert from '../functions/invokeAlert';\nimport { INVALID_EMAIL_PASSWORD, EMPTY_FIELD, INVALID_NICKNAME_NAME } from '../errorMsgs';\n\nexport const validateIfFieldsAreFilled = (data) => {\n  const { name,  birthdate, email, password } = data;\n  if (!name || !birthdate || !email || !password) {\n    return invokeAlert(EMPTY_FIELD);\n  }\n\n  return true;\n};\n\nexport const validateIfFieldsAreCorrect = (data) => {\n  const { name, email, password } = data;\n\n  const mailFormat = /[a-z]+@[a-z]+.com/g;\n  const less = 6;\n  const nameLess = 6;\n  validateIfFieldsAreFilled(data);\n\n  if (name < nameLess) return invokeAlert(INVALID_NICKNAME_NAME);\n  if (!email.match(mailFormat)\n  && password.length < less) return invokeAlert(INVALID_EMAIL_PASSWORD);\n\n  return true;\n};\n","import styled from 'styled-components';\n\nexport const ButtonLogin = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 19px 32px;\n  Width: 327px;\n  Height: 56px;\n  background: #C90000;\n  border-radius: 32px;\n  color: white;\n  font-size: 18px;\n`;\n\nexport const MainDiv = styled.div`\n  justify-content: center;\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  h2 {\n    color: #000000;\n    font-size: 27px;\n    font-weight: bold; \n    margin-bottom: 0;\n    margin-top: 20px;\n}\n  p {\n    color: #2E3E5C;\n    font-family: Inter;\n    font-style: normal;\n    font-weight: 500;\n    font-size: 15px;\n    line-height: 25px;\n    text-align: center;\n    letter-spacing: 0.5px;\n  }\n  section{\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    position: relative;\n    input {\n      background: #FFFFFF;\n      border: 1px solid #D0DBEA;\n      box-sizing: border-box;\n      border-radius: 32px;\n      Width: 327px;\n      margin-bottom: 15px ;\n      outline: none;\n      padding: .5rem 3.5rem .5rem 3.5rem ;\n      font-size: 20px;\n    }\n    input:nth-child(6){\n      padding: .5rem 1.0rem .5rem 3.5rem ;\n\n    }\n  }\n`;\n\nexport const LogoImg = styled.img`\n    width: 327px;\n    height: 140px;\n`;\n","import React, { useState } from 'react';\n\nimport { Redirect } from 'react-router-dom';\nimport { registerNewUser } from '../../services/api';\nimport { validateIfFieldsAreCorrect,\n} from '../../helpers/verifyFunctions/signUp_validateEmail';\nimport { ButtonLogin, MainDiv, LogoImg } from './index.styles';\nimport Logo from '../imgs/iconedoApp3.jpg';\n\nconst userDefault = {\n  name: '',\n  birthdate: '',\n  email: '',\n  password: '',\n};\nconst SignUp = () => {\n  const [userInfo, setUserInfo] = useState(userDefault);\n  const [redirect, setRedirect] = useState(false);\n\n  const handleclick = async () => {\n    if (!validateIfFieldsAreCorrect(userInfo)) {\n      return;\n    }\n    const register = await registerNewUser(userInfo);\n    console.log(register, 'eu aqui');\n    if (register) return setRedirect(true);\n  };\n\n  const handleChange = ({ target: { value, name } }) => {\n    setUserInfo({\n      ...userInfo,\n      [name]: value,\n    });\n  };\n\n  const renderSections = () => (\n    <section>\n      <input\n        type=\"text\"\n        name=\"name\"\n        onChange={ handleChange }\n        placeholder=\"nome\"\n        required\n      />\n      <input\n        type=\"date\"\n        data-date=\"\"\n        onChange={ handleChange }\n        name=\"birthdate\"\n        data-date-format=\"DD MMMM YYYY\"\n        required\n      />\n      <input\n        type=\"text\"\n        name=\"email\"\n        onChange={ handleChange }\n        placeholder=\"email\"\n        required\n      />\n\n      <input\n        type=\"password\"\n        onChange={ handleChange }\n        name=\"password\"\n        placeholder=\"senha\"\n        required\n      />\n    </section>\n  );\n\n  return (\n    <MainDiv>\n      <LogoImg src={ Logo } alt=\"Logo\" />\n      <h2>Bem Vindo!</h2>\n      <p>Cadastre seus dados para acessar a plataforma!</p>\n      {renderSections()}\n      <ButtonLogin type=\"submit\" onClick={ handleclick }>Cadastrar</ButtonLogin>\n      {redirect && <Redirect to=\"/\" />}\n    </MainDiv>\n  );\n};\n\nexport default SignUp;\n","import styled from 'styled-components';\n\nexport const SectionDefault = styled.section`\n    background-color: #F08080;\n    color: white;\n    height: 56px;\n    display: flex;\n    align-items: center;\n    width: 100%;\n    position:  fixed;\n    justify-content: center;\n    top: 0;\n    svg {\n      width: 27px;\n      height: 27px;\n    }\n\n    svg:nth-child(2) {\n      position: relative;\n      display: flex;\n      align-items: center;\n      left: 42%;\n    }\n`;\n\nexport const Header = styled.header`\nwidth: 100%;\nmargin-bottom: 56px;`;\n","import React, { useState } from 'react';\nimport { FaDoorOpen } from 'react-icons/fa';\nimport { Redirect } from 'react-router-dom';\nimport * as S from './header.styles';\n\nconst Header = () => {\n  const [redirect, setRedirect] = useState(false);\n  const handleClick = () => {\n    localStorage.clear();\n    setRedirect(true);\n  };\n  const renderHeaderDefault = () => (\n    <S.SectionDefault>\n\n      <h1>Lista de tarefas</h1>\n      <FaDoorOpen class=\"fa-solid fa-door-open\" onClick={ handleClick } />\n      { redirect && <Redirect to=\"/\" />}\n    </S.SectionDefault>\n  );\n\n  return (\n    <S.Header>\n      { renderHeaderDefault() }\n    </S.Header>\n  );\n};\n\nexport default Header;\n","import styled from 'styled-components';\n\nexport const MainDiv = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  flex-direction: column;\n    align-items: center;\n  div {\n    display: flex;\n    height: 60px;\n    width: 100%;\n    justify-content: center;\n    h5 {\n      padding: 0.5em;\n    }\n  }\n\n  button{\n    display: flex;\n    align-items: center;\n    text-decoration: none;\n\n  }\n  section:nth-child(2) {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    button {\n      height: 40px;\n    }\n\n\n    svg {\n      font-size: 1.4em;\n      margin-right: 5px;\n    }\n  }\n  table {\n  width: 100%;\n  border-collapse: collapse;\n}\n\nthead th {\n  text-align: center;\n  border-bottom: 2px solid black;\n}\n\ntbody td {\n  border-bottom: 1px solid #ccc;\n  width: 16%;\n  text-align: center;\n  max-width: 100px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  height: 40px;\n\n  svg {\n    height: 20px;\n    width: 18px;  \n  }\n  svg:hover {\n  color: #bebebe;\n  /* color: #eee; */\n}\n\n\n\n}\ntbody td:hover {\n  white-space:normal;\n    text-overflow: inherit;\n    overflow: visible;\n\n}\n\n\ntbody tr:hover {\n  background-color: #eee;\n}\n\n\n`;\nexport const FormDiv = styled.div`\n  flex-direction: column;\n  width: 80% !important;\n  height: 60% !important; \n  background-color: #eee; \n  box-shadow: 0 0 10px rgba(0,0,0,0.6);\n -webkit-box-shadow: 0 0 10px rgba(0,0,0,0.6);\n  margin-top: 20px;\n  align-items: center;\n  svg {\n    font-size: 60px;\n    right: 10px;\n    position: absolute;\n\n  }\n\n  form {\n    margin-left: 20px;\n    margin-bottom: 20px;\n    display: flex;\n    flex-wrap: wrap;\n    button :nth-child(6) {\n      background-color: green;\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nexport const FormDiv = styled.div`\n  flex-direction: column;\n  width: 80% !important;\n  height: 60% !important; \n  background-color: #eee; \n  box-shadow: 0 0 10px rgba(0,0,0,0.6);\n -webkit-box-shadow: 0 0 10px rgba(0,0,0,0.6);\n  margin-top: 20px;\n  align-items: center;\n  svg {\n    font-size: 60px;\n    right: 10px;\n    position: absolute;\n  }\n\n  form {\n    margin-left: 20px;\n    margin-bottom: 20px;\n    display: flex;\n    flex-wrap: wrap;\n  }\n`;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { createContext, useState } from 'react';\n\nimport { getAllTasks, getAllUser } from '../services/api';\n\nconst Context = createContext();\n\nconst defaultCurrentTask = {\n  task: '',\n  employee: '',\n  date: '',\n  status: '',\n  id: 0,\n};\n\nconst Provider = ({ children }) => {\n  const [allTasks, setAllTasks] = useState([]);\n  const [allUsers, setAllUsers] = useState([]);\n  const [currentTask, setCurrentTask] = useState(defaultCurrentTask);\n\n  const fetchTasks = async () => {\n    const data = await getAllTasks();\n    setAllTasks(data.data);\n  };\n\n  const fetchUser = async () => {\n    const data = await getAllUser();\n    console.log(data, 'data');\n    setAllUsers(data.data);\n  };\n\n  const changeTask = ({ target: { value, name } }) => {\n    setCurrentTask({\n      ...currentTask,\n      [name]: value,\n    });\n  };\n\n  const renderEmployeesSelect = (employee) => (\n    <select name=\"employee\" defaultValue={ employee } onChange={ changeTask }>\n      <option value=\"\" selected disabled hidden>Selecione</option>\n      {\n        allUsers.map(({ name, id }) => (\n          <option key={ id }>{ name }</option>\n        ))\n      }\n    </select>\n  );\n\n  const context = {\n    fetchTasks,\n    allTasks,\n    allUsers,\n    fetchUser,\n    renderEmployeesSelect,\n    currentTask,\n    setCurrentTask,\n  };\n\n  return (\n    <Context.Provider value={ context }>{children}</Context.Provider>\n  );\n};\n\nexport { Provider, Context };\n","import invokeAlert from '../functions/invokeAlert';\nimport { EMPTY_FIELD } from '../errorMsgs';\n\nconst validateInsertForm = (data) => {\n  const { task, employee, date, status } = data;\n  console.log('teste', task, employee, date, status);\n  if (!task || !employee || !date || !status) return invokeAlert(EMPTY_FIELD);\n  return true;\n};\n\nexport default validateInsertForm;\n","import React, { useState, useContext } from 'react';\nimport { createTask } from '../../../services/api';\nimport * as S from './insertTask.styles';\nimport { Context } from '../../../provider/Provider';\nimport validateInsertForm from '../../../helpers/verifyFunctions/insertTask_validateForm';\n\nconst taskDefault = {\n  task: '',\n  employee: '',\n  date: '',\n  status: '',\n};\n\nconst RenderInsertTaskForm = () => {\n  const { fetchTasks, renderEmployeesSelect } = useContext(Context);\n\n  const [newTask, setNewTask] = useState(taskDefault);\n\n  const handleNewTask = ({ target: { value, name } }) => {\n    setNewTask({\n      ...newTask,\n      [name]: value,\n    });\n  };\n\n  const sendTask = async () => {\n    if (validateInsertForm(newTask)) {\n      await createTask(newTask);\n      return fetchTasks();\n    }\n  };\n\n  return (\n    <S.FormDiv>\n      <h1>Inserir Nova Tarefa: </h1>\n      <form>\n        <label htmlFor=\"task\">\n          Tarefa:\n          {' '}\n          <input\n            type=\"text\"\n            name=\"task\"\n            placeholder=\"digite aqui...\"\n            onChange={ handleNewTask }\n          />\n        </label>\n        <label htmlFor=\"employee\" onChange={ handleNewTask }>\n          Responsável:\n          {' '}\n\n          { renderEmployeesSelect()}\n        </label>\n        <label htmlFor=\"date\">\n          Data de inicio:\n          {' '}\n\n          <input\n            type=\"date\"\n            data-date=\"\"\n            name=\"date\"\n            data-date-format=\"DD MMMM YYYY\"\n            required\n            onChange={ handleNewTask }\n          />\n        </label>\n        <label htmlFor=\"status\" onChange={ handleNewTask }>\n          Status:\n          {' '}\n\n          <select name=\"status\" onChange={ handleNewTask }>\n            <option value=\"\" selected disabled hidden>Selecione</option>\n            <option>Em andamento</option>\n            <option>Pendentes</option>\n            <option>Finalizados</option>\n          </select>\n        </label>\n        <button type=\"button\" onClick={ sendTask }>Criar</button>\n      </form>\n    </S.FormDiv>\n  );\n};\n\nexport default RenderInsertTaskForm;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect, useContext } from 'react';\nimport { FaPenSquare, FaPlusSquare, FaTrash, FaCheck } from 'react-icons/fa';\nimport Header from './components/header';\nimport * as S from './index.styles';\nimport { updateTask, removeTask } from '../../services/api';\nimport RenderInsertTaskForm from './components/insertTask';\nimport { Context } from '../../provider/Provider';\n\nconst MINUS_ONE = -1;\n\nconst defaultSort = {\n  name: 'task',\n  asc: true,\n};\n\nconst Home = () => {\n  const { allTasks, fetchTasks,\n    fetchUser, renderEmployeesSelect, currentTask, setCurrentTask } = useContext(Context);\n  const [visibleInsert, setVisibleInsert] = useState(false);\n  const [visibleUpdate, setVisibleUpdate] = useState(false);\n  const [sortType, setSortType] = useState(defaultSort);\n  const [currentStatus, setCurrentStatus] = useState('Em andamento');\n  const [currentId, setId] = useState(0);\n\n  useEffect(() => {\n    fetchTasks();\n    fetchUser();\n  }, []);\n\n  const handleTasksStatus = ({ target, target: { name } }) => {\n    const buttons = document.querySelectorAll('.selected');\n    setCurrentStatus(name);\n    buttons.forEach((button) => {\n      button.classList.remove('selected');\n    });\n\n    target.classList.add('selected');\n  };\n\n  const handleInsertTask = () => setVisibleInsert(!visibleInsert);\n\n  const renderTasksStatus = () => (\n    <div>\n      <button\n        onClick={ handleTasksStatus } \n        className=\"selected\"\n        name=\"Em andamento\"\n        type=\"button\"\n      >\n        Em andamento\n      </button>\n      <button onClick={ handleTasksStatus } name=\"Pendentes\" type=\"button\">\n        Pendentes\n      </button>\n      <button onClick={ handleTasksStatus } name=\"Finalizados\" type=\"button\">\n        Finalizados\n      </button>\n      <button type=\"button\" onClick={ handleInsertTask }>\n        <FaPlusSquare />\n        {' '}\n        Tarefa\n      </button>\n    </div>\n  );\n\n  const sortAll = () => {\n    const { asc, name } = sortType;\n    if (asc === false) {\n      return allTasks.sort((a, b) => {\n        if (b[name] < a[name]) {\n          return 1;\n        }\n        if (b[name] > a[name]) {\n          return MINUS_ONE;\n        }\n        return 0;\n      });\n    }\n    return allTasks.sort((a, b) => {\n      if (b[name] > a[name]) {\n        return 1;\n      }\n      if (b[name] < a[name]) {\n        return MINUS_ONE;\n      }\n      return 0;\n    });\n  };\n\n  const handleSort = ({ target: { id } }) => {\n    const { asc, name } = sortType;\n    if (name === id) {\n      return setSortType({\n        ...sortType,\n        name: id,\n        asc: !asc,\n      });\n    }\n    return setSortType({\n      ...sortType,\n      name: id,\n      asc: true,\n    });\n  };\n\n  const handleClick = (id) => {\n    setVisibleUpdate(!visibleUpdate);\n    setId(id);\n    const data = allTasks.filter((el) => el.id === id);\n    const { task, employee, date, status } = data[0];\n    setCurrentTask({\n      task,\n      employee,\n      date,\n      status,\n      id,\n    });\n  };\n\n  const checkId = (id) => {\n    if (visibleUpdate && id === currentId) return true;\n    return false;\n  };\n\n  const sendUpdateTask = async () => {\n    setVisibleUpdate(!visibleUpdate);\n\n    await updateTask(currentTask);\n    return fetchTasks();\n  };\n\n  const changeTask = ({ target: { value, name } }) => {\n    setCurrentTask({\n      ...currentTask,\n      [name]: value,\n    });\n  };\n\n  const renderStatusSelect = (status) => (\n    <select defaultValue={ status } onChange={ changeTask } name=\"status\">\n      <option>Em andamento</option>\n      <option>Pendentes</option>\n      <option>Finalizado</option>\n    </select>\n  );\n  const removeOneTask = async (id) => {\n    await removeTask(id);\n    return fetchTasks();\n  };\n\n  const renderTable = () => (\n    <table>\n      <thead>\n        <tr>\n          <th onClick={ handleSort } id=\"id\"> Id</th>\n          <th onClick={ handleSort } id=\"task\">Tarefa</th>\n          <th id=\"employee\" onClick={ handleSort }>Responsável</th>\n          <th id=\"date\" onClick={ handleSort }>Data de inicio</th>\n          <th id=\"status\">Status</th>\n          <th>Edit</th>\n        </tr>\n      </thead>\n      {\n        sortAll()\n          .filter((el) => el.status === currentStatus)\n          .map(({ task, employee, date, id, status }) => (\n            <tbody key={ id }>\n              <td>{id}</td>\n              <td>\n                {\n                  !checkId(id) ? task : <input\n                    type=\"text\"\n                    name=\"task\"\n                    defaultValue={ task }\n                    onChange={ changeTask }\n                  />\n                }\n\n              </td>\n              <td>\n                {\n                  !checkId(id) ? employee : renderEmployeesSelect(employee)\n                }\n              </td>\n              <td>\n                {\n                  !checkId(id) ? date : <input\n                    type=\"date\"\n                    name=\"date\"\n                    defaultValue={ date }\n                    onChange={ changeTask }\n                  />\n                }\n              </td>\n              <td>{!checkId(id) ? status : renderStatusSelect(status) }</td>\n              <td>\n                <FaPenSquare\n                  class=\"fa-solid fa-pen-to-square\"\n                  onClick={ () => handleClick(id) }\n                />\n                <FaTrash onClick={ () => removeOneTask(id) } />\n                {\n                  checkId(id) && <FaCheck\n                    onClick={ () => sendUpdateTask() }\n                  />\n                }\n              </td>\n            </tbody>\n          ))\n      }\n    </table>\n  );\n\n  return (\n    <div>\n      <S.MainDiv>\n        <Header />\n        <section>\n          {renderTasksStatus()}\n          {visibleInsert && <RenderInsertTaskForm />}\n        </section>\n        <h1>Tarefas</h1>\n        { allTasks && renderTable()}\n      </S.MainDiv>\n    </div>\n  );\n};\n\nexport default Home;\n","import { Route } from 'react-router-dom';\nimport React from 'react';\nimport Login from './pages/login';\nimport SignUp from './pages/signup';\nimport Home from './pages/home';\n\nfunction App() {\n  return (\n    <div>\n      <Route exact path=\"/home\" component={ Home } />\n      <Route exact path=\"/signup\" component={ SignUp } />\n      <Route exact path=\"/\" component={ Login } />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport './index.css';\nimport { Provider } from './provider/Provider';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Provider>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}